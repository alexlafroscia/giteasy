{"version":3,"sources":["giteasy/app.js","giteasy/components/file-upload.js","giteasy/components/render-files.js","giteasy/controllers/choose.js","giteasy/controllers/index.js","giteasy/controllers/orgs.js","giteasy/controllers/repo.js","giteasy/controllers/repo/files.js","giteasy/controllers/repo/index.js","giteasy/controllers/user.js","giteasy/initializers/app-version.js","giteasy/initializers/export-application-global.js","giteasy/initializers/session-service.js","giteasy/router.js","giteasy/routes/choose.js","giteasy/routes/index.js","giteasy/routes/oauth.js","giteasy/routes/repo.js","giteasy/routes/repo/edit-file.js","giteasy/routes/repo/files.js","giteasy/routes/repo/index.js","giteasy/services/session.js","giteasy/templates/application.js","giteasy/templates/choose.js","giteasy/templates/components/file-upload.js","giteasy/templates/components/render-files.js","giteasy/templates/index.js","giteasy/templates/oauth.js","giteasy/templates/orgs.js","giteasy/templates/repo.js","giteasy/templates/repo/edit-file.js","giteasy/templates/repo/files.js","giteasy/templates/repo/index.js","giteasy/tests/app.jshint.js","giteasy/tests/components/file-upload.jshint.js","giteasy/tests/components/render-files.jshint.js","giteasy/tests/controllers/choose.jshint.js","giteasy/tests/controllers/index.jshint.js","giteasy/tests/controllers/orgs.jshint.js","giteasy/tests/controllers/repo.jshint.js","giteasy/tests/controllers/repo/files.jshint.js","giteasy/tests/controllers/repo/index.jshint.js","giteasy/tests/controllers/user.jshint.js","giteasy/tests/helpers/resolver.js","giteasy/tests/helpers/resolver.jshint.js","giteasy/tests/helpers/start-app.js","giteasy/tests/helpers/start-app.jshint.js","giteasy/tests/initializers/session-service.jshint.js","giteasy/tests/router.jshint.js","giteasy/tests/routes/choose.jshint.js","giteasy/tests/routes/index.jshint.js","giteasy/tests/routes/oauth.jshint.js","giteasy/tests/routes/repo.jshint.js","giteasy/tests/routes/repo/edit-file.jshint.js","giteasy/tests/routes/repo/files.jshint.js","giteasy/tests/routes/repo/index.jshint.js","giteasy/tests/services/session.jshint.js","giteasy/tests/test-helper.js","giteasy/tests/test-helper.jshint.js","giteasy/tests/unit/components/file-upload-test.js","giteasy/tests/unit/components/file-upload-test.jshint.js","giteasy/tests/unit/components/render-files-test.js","giteasy/tests/unit/components/render-files-test.jshint.js","giteasy/tests/unit/controllers/choose-test.js","giteasy/tests/unit/controllers/choose-test.jshint.js","giteasy/tests/unit/controllers/orgs-test.js","giteasy/tests/unit/controllers/orgs-test.jshint.js","giteasy/tests/unit/controllers/repo-test.js","giteasy/tests/unit/controllers/repo-test.jshint.js","giteasy/tests/unit/controllers/repo/files-test.js","giteasy/tests/unit/controllers/repo/files-test.jshint.js","giteasy/tests/unit/controllers/repo/index-test.js","giteasy/tests/unit/controllers/repo/index-test.jshint.js","giteasy/tests/unit/controllers/user-test.js","giteasy/tests/unit/controllers/user-test.jshint.js","giteasy/tests/unit/routes/choose-test.js","giteasy/tests/unit/routes/choose-test.jshint.js","giteasy/tests/unit/routes/index-test.js","giteasy/tests/unit/routes/index-test.jshint.js","giteasy/tests/unit/routes/oauth-test.js","giteasy/tests/unit/routes/oauth-test.jshint.js","giteasy/tests/unit/routes/repo-test.js","giteasy/tests/unit/routes/repo-test.jshint.js","giteasy/tests/unit/routes/repo/files-test.js","giteasy/tests/unit/routes/repo/files-test.jshint.js","giteasy/tests/unit/routes/repo/index-test.js","giteasy/tests/unit/routes/repo/index-test.jshint.js","giteasy/tests/unit/services/session-test.js","giteasy/tests/unit/services/session-test.jshint.js","giteasy/tests/unit/views/index-choose-repo-test.js","giteasy/tests/unit/views/index-choose-repo-test.jshint.js","giteasy/tests/unit/views/index-test.js","giteasy/tests/unit/views/index-test.jshint.js","giteasy/tests/unit/views/repo-dir/edit-file-test.js","giteasy/tests/unit/views/repo-dir/edit-file-test.jshint.js","giteasy/tests/views/index-choose-repo.jshint.js","giteasy/tests/views/index.jshint.js","giteasy/tests/views/repo-dir/edit-file.jshint.js","giteasy/views/index-choose-repo.js","giteasy/views/index.js","giteasy/views/repo-dir/edit-file.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('giteasy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'giteasy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('giteasy/components/file-upload', ['exports', 'ember-uploader/file-field'], function (exports, FileField) {\n\n  'use strict';\n\n  exports['default'] = FileField['default'].extend({\n    repo: null,\n    token: null,\n\n    filesDidChange: (function () {\n      var _this = this;\n      var repo = this.get(\"repo\");\n      var files = this.get(\"files\");\n\n      // Get path to file\n      var path = this.get(\"path\");\n      if (path.slice(-1) === \"/\") {\n        path = \"\";\n      }\n      path += files[0].name;\n\n      var commit = \"Upload file \" + files[0].name;\n      var reader = new FileReader();\n\n      reader.onload = function () {\n        console.log(\"uploading the file\");\n        var file = reader.result;\n\n        repo.write(\"master\", path, file, commit, function (err) {\n          if (err) {\n            console.error(err);\n          } else {\n            console.debug(\"it worked!\");\n            _this.sendAction(\"uploadSuccess\");\n          }\n        });\n      };\n\n      reader.onerror = function () {\n        reader.abort();\n      };\n\n      reader.readAsText(files[0]);\n    }).observes(\"files\")\n\n  });\n\n});","define('giteasy/components/render-files', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(Ember['default'].PromiseProxyMixin, {\n\n    tagName: \"ul\",\n    classNames: [\"card-list\"],\n\n    isLoading: true,\n    files: null,\n\n    getFiles: (function () {\n      var _this = this;\n      var repo = this.get(\"repo\");\n      var path = this.get(\"path\");\n      if (path.slice(-1) === \"/\") {\n        path = path.substring(0, path.length - 1);\n      }\n      new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        repo.contents(\"master\", path, function (err, contents) {\n          if (!Ember['default'].isBlank(err)) {\n            reject(err);\n          } else {\n            resolve(contents);\n          }\n        });\n      }).then(function (contents) {\n        // Add the `isFolder` property to each object and resolve\n        // the resulting array\n        return new Ember['default'].RSVP.resolve(contents.map(function (item) {\n          if (item.type === \"dir\") {\n            item.isFolder = true;\n            item.isFile = false;\n          } else {\n            item.isFolder = false;\n            item.isFile = true;\n          }\n          return item;\n        }));\n      }).then(function (contents) {\n        return new Ember['default'].RSVP.resolve(contents.sortBy(\"isFile\", \"name\"));\n      }).then(function (contents) {\n        _this.set(\"files\", contents);\n        _this.set(\"isLoading\", false);\n      })[\"catch\"](function (error) {\n        console.error(error);\n        _this.set(\"error\", error);\n        _this.set(\"isRejected\", true);\n        _this.set(\"isLoading\", false);\n      });\n    }).on(\"init\").observes(\"path\"),\n\n    // Actions\n    actions: {\n\n      downloadFile: function (fileName) {\n        var repo = this.get(\"repo\");\n        var path = this.get(\"path\");\n        repo.read(\"master\", path + fileName, function (err, data) {\n          if (!Ember['default'].isBlank(err)) {\n            console.error(err);\n          } else {\n            window.open(\"data:text;charset=utf-8,\" + data);\n          }\n        });\n      }\n\n    }\n\n\n  });\n\n});","define('giteasy/controllers/choose', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n\n    // Sort the content by name\n    sortBy: [\"name\"],\n\n    // The filter to search by\n    filter: \"\",\n\n    // Return the filtered content\n    arrangedContent: (function () {\n      var content = this.get(\"content\");\n      var filter = this.get(\"filter\").toLowerCase();\n\n      // If the filter is empty, return all of the content\n      if (Ember['default'].isBlank(filter)) {\n        return content;\n      }\n\n      var arrangedContent = content.filter(function (item) {\n        if (!Ember['default'].isBlank(item.name)) {\n          if (item.name.toLowerCase().indexOf(filter) >= 0) {\n            return true;\n          }\n        }\n\n        if (!Ember['default'].isBlank(item.description)) {\n          if (item.description.toLowerCase().indexOf(filter) >= 0) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n      return arrangedContent;\n    }).property(\"content\", \"filter\")\n\n  });\n\n});","define('giteasy/controllers/index', ['exports', 'ember', 'giteasy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    actions: {\n      login: function () {\n        var url = \"https://github.com/login/oauth/authorize?client_id=\";\n        url += config['default'].API.GITHUB_CLIENT_ID;\n        url += \"&scope=user,repo\";\n        location.href = url;\n      }\n    }\n  });\n\n});","define('giteasy/controllers/orgs', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ArrayController.extend({});\n\n});","define('giteasy/controllers/repo', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    repo: Ember['default'].computed.alias(\"session.currentRepo\"),\n    path: \"/\",\n    token: Ember['default'].computed.alias(\"session.accessToken\"),\n    owner: Ember['default'].computed.alias(\"session.repo.owner\"),\n    repoName: Ember['default'].computed.alias(\"session.repo.name\"),\n\n    actions: {\n      refreshList: function () {\n        console.debug(\"test\");\n        this.propertyWillChange(\"path\");\n      }\n    }\n  });\n\n});","define('giteasy/controllers/repo/files', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    repo: Ember['default'].computed.alias(\"session.currentRepo\"),\n    path: Ember['default'].computed.alias(\"model\")\n\n  });\n\n});","define('giteasy/controllers/repo/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    repo: Ember['default'].computed.alias(\"session.currentRepo\"),\n    path: \"\"\n\n  });\n\n});","define('giteasy/controllers/user', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    repo: Ember['default'].computed.alias(\"session.currentRepo\")\n  });\n\n});","define('giteasy/initializers/app-version', ['exports', 'giteasy/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function (container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('giteasy/initializers/export-application-global', ['exports', 'ember', 'giteasy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('giteasy/initializers/session-service', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    application.inject(\"route\", \"session\", \"service:session\");\n    application.inject(\"controller\", \"session\", \"service:session\");\n  }exports['default'] = {\n    name: \"session-service\",\n    initialize: initialize\n  };\n\n});","define('giteasy/router', ['exports', 'ember', 'giteasy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route(\"index\", { path: \"/\" });\n    this.route(\"oauth\");\n    this.route(\"choose\", { path: \"/choose\" });\n    this.route(\"repo\", { path: \":owner_id/:repo_id\" }, function () {\n      this.route(\"editFile\", { path: \"files/*file_path/edit\" });\n      this.route(\"files\", { path: \"files/*file_path\" });\n    });\n  });\n\n  exports['default'] = Router;\n\n});","define('giteasy/routes/choose', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function () {\n      var user = this.session.get(\"user\");\n      return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        user.repos(function (err, repos) {\n          if (!Ember['default'].isBlank(err)) {\n            reject(err);\n          } else {\n            resolve(repos);\n          }\n        });\n      });\n    }\n  });\n\n});","define('giteasy/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('giteasy/routes/oauth', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function (transition) {\n      var params = transition.queryParams;\n      localStorage.setItem(\"accessToken\", params.access_token);\n      this.session.set(\"accessToken\", params.access_token);\n      this.transitionTo(\"choose\");\n    }\n  });\n\n});","define('giteasy/routes/repo', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function (params) {\n      this.session.get(\"repo\").set(\"owner\", params.owner_id);\n      this.session.get(\"repo\").set(\"name\", params.repo_id);\n\n      var github = this.session.get(\"github\");\n      var repo = github.getRepo(params.owner_id, params.repo_id);\n      this.session.set(\"currentRepo\", repo);\n      return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        repo.show(function (err, repo) {\n          if (!Ember['default'].isBlank(err)) {\n            reject(err);\n          } else {\n            resolve(repo);\n          }\n        });\n      });\n    }\n  });\n\n});","define('giteasy/routes/repo/edit-file', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('giteasy/routes/repo/files', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function (params) {\n      return params.file_path;\n    }\n  });\n\n});","define('giteasy/routes/repo/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('giteasy/services/session', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend({\n\n    user: null,\n    accessToken: null,\n\n    repo: Ember['default'].Object.create({\n      owner: null,\n      name: null\n    }),\n\n    init: function () {\n      if (Ember['default'].isPresent(localStorage.accessToken)) {\n        this.set(\"accessToken\", localStorage.accessToken);\n        this.loginUser();\n      }\n    },\n\n\n    organizations: (function () {\n      var user = this.get(\"user\");\n      return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        user.orgs(function (err, orgs) {\n          // Handle the error if there is one\n          if (!Ember['default'].isBlank(err)) {\n            reject(err);\n          } else {\n            resolve(orgs);\n          }\n        });\n      });\n    }).property(\"user\"),\n\n\n    allRepos: (function () {\n      var user = this.get(\"user\");\n      return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        user.repos(function (err, repos) {\n          if (!Ember['default'].isBlank(err)) {\n            reject(err);\n          } else {\n            resolve(repos);\n          }\n        });\n      });\n    }).property(\"user\"),\n\n\n    loginUser: (function () {\n      var github = new Github({\n        token: this.get(\"accessToken\"),\n        auth: \"oauth\"\n      });\n\n      // Store the github property\n      this.set(\"github\", github);\n\n      // Set the user property\n      var user = github.getUser();\n      this.set(\"user\", user);\n    }).observes(\"accessToken\")\n\n  });\n\n});","define('giteasy/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/choose', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h2\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n            var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),-1,-1);\n            content(env, morph0, context, \"name\");\n            content(env, morph1, context, \"description\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"link\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,1);\n          block(env, morph0, context, \"link-to\", [\"repo\", get(env, context, \"owner.login\"), get(env, context, \"name\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"header\");\n        dom.setAttribute(el1,\"class\",\"navbar\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"container\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"GitEasy\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"card container\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"card-list\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [2]),0,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 1, 1]),0,1);\n        inline(env, morph0, context, \"input\", [], {\"classNames\": \"repo-filter\", \"placeholder\": \"Search for a repo\", \"value\": get(env, context, \"filter\")});\n        block(env, morph1, context, \"each\", [], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/components/file-upload', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/components/render-files', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createTextNode(\"  Loading...\\n\");\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createTextNode(\"    There was a problem loading the files!\\n\");\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            var child0 = (function() {\n              return {\n                isHTMLBars: true,\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"          \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, content = hooks.content;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n                  content(env, morph0, context, \"file.name\");\n                  return fragment;\n                }\n              };\n            }());\n            return {\n              isHTMLBars: true,\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, block = hooks.block;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n                var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n                block(env, morph0, context, \"link-to\", [\"repo.files\", get(env, context, \"file.path\")], {}, child0, null);\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"a\");\n                var el2 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n        \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element0 = dom.childAt(fragment, [1]);\n                var morph0 = dom.createMorphAt(element0,0,1);\n                element(env, element0, context, \"action\", [\"downloadFile\", get(env, context, \"file.name\")], {});\n                content(env, morph0, context, \"file.name\");\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            blockParams: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"      \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"li\");\n              dom.setAttribute(el1,\"class\",\"no-link\");\n              var el2 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"      \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement, blockArguments) {\n              var dom = env.dom;\n              var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,1);\n              set(env, context, \"file\", blockArguments[0]);\n              block(env, morph0, context, \"if\", [get(env, context, \"file.isFolder\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n            block(env, morph0, context, \"each\", [get(env, context, \"files\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          block(env, morph0, context, \"if\", [get(env, context, \"isRejected\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        block(env, morph0, context, \"if\", [get(env, context, \"isLoading\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"header\");\n        dom.setAttribute(el1,\"class\",\"site-head\");\n        dom.setAttribute(el1,\"class\",\"jumbotron\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        dom.setAttribute(el2,\"id\",\"site-head-title\");\n        var el3 = dom.createTextNode(\"GitEasy\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"class\",\"container-fluid\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2,\"id\",\"login\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"row\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h4\");\n        dom.setAttribute(el4,\"id\",\"site-head-sub-title\");\n        var el5 = dom.createTextNode(\"A Gitway Drug!\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"row\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-offset-4\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        var el6 = dom.createTextNode(\"Git Started!\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1, 3, 1, 1]);\n        element(env, element0, context, \"action\", [\"login\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/oauth', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/orgs', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h2\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n          content(env, morph0, context, \"login\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        block(env, morph0, context, \"each\", [], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/repo', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"header\");\n        dom.setAttribute(el1,\"class\",\"site-head-sm\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        dom.setAttribute(el2,\"id\",\"site-head-title-sm\");\n        var el3 = dom.createTextNode(\"GitEasy\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"toolbarIcon glyphicon glyphicon-plus\");\n        dom.setAttribute(el2,\"title\",\"Upload a file or folders\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"toolbarIcon glyphicon glyphicon-save\");\n        dom.setAttribute(el2,\"title\",\"Download a file or folders\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2]);\n        var morph0 = dom.createMorphAt(element0,0,1);\n        var morph1 = dom.createMorphAt(element0,5,6);\n        inline(env, morph0, context, \"file-upload\", [], {\"path\": get(env, context, \"path\"), \"repo\": get(env, context, \"repo\"), \"uploadSuccess\": \"refreshList\"});\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/repo/edit-file', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createTextNode(\"test\\n\");\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/repo/files', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        inline(env, morph0, context, \"render-files\", [], {\"repo\": get(env, context, \"repo\"), \"path\": get(env, context, \"path\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/templates/repo/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        inline(env, morph0, context, \"render-files\", [], {\"repo\": get(env, context, \"repo\"), \"path\": get(env, context, \"path\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('giteasy/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/components/file-upload.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/file-upload.js should pass jshint', function() { \n    ok(true, 'components/file-upload.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/components/render-files.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/render-files.js should pass jshint', function() { \n    ok(true, 'components/render-files.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/controllers/choose.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/choose.js should pass jshint', function() { \n    ok(true, 'controllers/choose.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/controllers/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/index.js should pass jshint', function() { \n    ok(true, 'controllers/index.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/controllers/orgs.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/orgs.js should pass jshint', function() { \n    ok(true, 'controllers/orgs.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/controllers/repo.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/repo.js should pass jshint', function() { \n    ok(true, 'controllers/repo.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/controllers/repo/files.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/repo');\n  test('controllers/repo/files.js should pass jshint', function() { \n    ok(true, 'controllers/repo/files.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/controllers/repo/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/repo');\n  test('controllers/repo/index.js should pass jshint', function() { \n    ok(true, 'controllers/repo/index.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/controllers/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/user.js should pass jshint', function() { \n    ok(true, 'controllers/user.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/helpers/resolver', ['exports', 'ember/resolver', 'giteasy/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('giteasy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/helpers/start-app', ['exports', 'ember', 'giteasy/app', 'giteasy/router', 'giteasy/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('giteasy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/initializers/session-service.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/session-service.js should pass jshint', function() { \n    ok(true, 'initializers/session-service.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/routes/choose.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/choose.js should pass jshint', function() { \n    ok(true, 'routes/choose.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/routes/oauth.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/oauth.js should pass jshint', function() { \n    ok(true, 'routes/oauth.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/routes/repo.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/repo.js should pass jshint', function() { \n    ok(true, 'routes/repo.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/routes/repo/edit-file.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/repo');\n  test('routes/repo/edit-file.js should pass jshint', function() { \n    ok(true, 'routes/repo/edit-file.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/routes/repo/files.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/repo');\n  test('routes/repo/files.js should pass jshint', function() { \n    ok(true, 'routes/repo/files.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/routes/repo/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/repo');\n  test('routes/repo/index.js should pass jshint', function() { \n    ok(true, 'routes/repo/index.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/services/session.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/session.js should pass jshint', function() { \n    ok(true, 'services/session.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/test-helper', ['giteasy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('giteasy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/components/file-upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"file-upload\", \"FileUploadComponent\", {});\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('giteasy/tests/unit/components/file-upload-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/file-upload-test.js should pass jshint', function() { \n    ok(true, 'unit/components/file-upload-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/components/render-files-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"render-files\", \"RenderFilesComponent\", {});\n\n  ember_qunit.test(\"it renders\", function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject({\n      path: \"/\"\n    });\n    equal(component._state, \"preRender\");\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, \"inDOM\");\n  });\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('giteasy/tests/unit/components/render-files-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/render-files-test.js should pass jshint', function() { \n    ok(true, 'unit/components/render-files-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/controllers/choose-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:choose\", \"ChooseController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/controllers/choose-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/choose-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/choose-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/controllers/orgs-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:orgs\", \"OrgsController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/controllers/orgs-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/orgs-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/orgs-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/controllers/repo-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:repo\", \"RepoController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/controllers/repo-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/repo-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/repo-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/controllers/repo/files-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:repo/files\", \"RepoFilesController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/controllers/repo/files-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/repo');\n  test('unit/controllers/repo/files-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/repo/files-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/controllers/repo/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:repo/index\", \"RepoIndexController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/controllers/repo/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/repo');\n  test('unit/controllers/repo/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/repo/index-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/controllers/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:user\", \"UserController\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/controllers/user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/user-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/user-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/routes/choose-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:choose\", \"ChooseRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/routes/choose-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/choose-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/choose-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:index\", \"IndexRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/index-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/routes/oauth-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:oauth\", \"OauthRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/routes/oauth-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/oauth-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/oauth-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/routes/repo-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:repo\", \"RepoRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/routes/repo-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/repo-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/repo-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/routes/repo/files-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:repo/files\", \"RepoFilesRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/routes/repo/files-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/repo');\n  test('unit/routes/repo/files-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/repo/files-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/routes/repo/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:repo/index\", \"RepoIndexRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('giteasy/tests/unit/routes/repo/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/repo');\n  test('unit/routes/repo/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/repo/index-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/services/session-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"service:session\", \"SessionService\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var service = this.subject();\n    ok(service);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['service:foo']\n\n});","define('giteasy/tests/unit/services/session-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/session-test.js should pass jshint', function() { \n    ok(true, 'unit/services/session-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/views/index-choose-repo-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"view:index-choose-repo\", \"IndexChooseRepoView\");\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var view = this.subject();\n    ok(view);\n  });\n\n});","define('giteasy/tests/unit/views/index-choose-repo-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/index-choose-repo-test.js should pass jshint', function() { \n    ok(true, 'unit/views/index-choose-repo-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/views/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"view:index\", \"IndexView\");\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var view = this.subject();\n    ok(view);\n  });\n\n});","define('giteasy/tests/unit/views/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/index-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/unit/views/repo-dir/edit-file-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"view:repo-dir/edit-file\", \"RepoDirEditFileView\");\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var view = this.subject();\n    ok(view);\n  });\n\n});","define('giteasy/tests/unit/views/repo-dir/edit-file-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/repo-dir');\n  test('unit/views/repo-dir/edit-file-test.js should pass jshint', function() { \n    ok(true, 'unit/views/repo-dir/edit-file-test.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/views/index-choose-repo.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/index-choose-repo.js should pass jshint', function() { \n    ok(true, 'views/index-choose-repo.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/views/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/index.js should pass jshint', function() { \n    ok(true, 'views/index.js should pass jshint.'); \n  });\n\n});","define('giteasy/tests/views/repo-dir/edit-file.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/repo-dir');\n  test('views/repo-dir/edit-file.js should pass jshint', function() { \n    ok(true, 'views/repo-dir/edit-file.js should pass jshint.'); \n  });\n\n});","define('giteasy/views/index-choose-repo', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].View.extend({\n\t\tdidInsertElement: function () {\n\t\t\t//stuffs for header functionality\n\t\t\t$(\".site-head\").prepend(\"<div class='canvasContainer' style='width:0; height:0;'><canvas id='demo-canvas'></canvas</div>\");\n\n\t\t\t$(function () {\n\t\t\t\tvar width,\n\t\t\t\t    height,\n\t\t\t\t    largeHeader,\n\t\t\t\t    canvas,\n\t\t\t\t    ctx,\n\t\t\t\t    points,\n\t\t\t\t    target,\n\t\t\t\t    animateHeader = true,\n\t\t\t\t    numberOfPoints = 10,\n\t\t\t\t    pointSizeMin = 7,\n\t\t\t\t    pointSizeMax = 25;\n\n\t\t\t\t// Main\n\t\t\t\tinitHeader();\n\t\t\t\tinitAnimation();\n\t\t\t\taddListeners();\n\n\t\t\t\tfunction initHeader() {\n\t\t\t\t\twidth = window.innerWidth;\n\t\t\t\t\theight = window.innerHeight;\n\t\t\t\t\ttarget = { x: width / 2, y: height / 2 };\n\n\t\t\t\t\tlargeHeader = document.getElementsByClassName(\"site-head\")[0];\n\n\t\t\t\t\tcanvas = document.getElementById(\"demo-canvas\");\n\t\t\t\t\tcanvas.width = $(\".site-head\").width();\n\t\t\t\t\tcanvas.height = $(\".site-head\").height();\n\t\t\t\t\tctx = canvas.getContext(\"2d\");\n\n\t\t\t\t\t// create points\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tfor (var x = 0; x < width; x = x + width / numberOfPoints) {\n\t\t\t\t\t\tfor (var y = 0; y < height; y = y + height / numberOfPoints) {\n\t\t\t\t\t\t\tvar px = x + Math.random() * width / numberOfPoints;\n\t\t\t\t\t\t\tvar py = y + Math.random() * height / numberOfPoints;\n\t\t\t\t\t\t\tvar p = { x: px, originX: px, y: py, originY: py };\n\t\t\t\t\t\t\tpoints.push(p);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// for each point find the 5 closest points\n\t\t\t\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\t\t\t\tvar closest = [];\n\t\t\t\t\t\tvar p1 = points[i];\n\t\t\t\t\t\tfor (var j = 0; j < points.length; j++) {\n\t\t\t\t\t\t\tvar p2 = points[j];\n\t\t\t\t\t\t\tif (p1 !== p2) {\n\t\t\t\t\t\t\t\tvar placed = false;\n\t\t\t\t\t\t\t\tfor (var k = 0; k < 5; k++) {\n\t\t\t\t\t\t\t\t\tif (!placed) {\n\t\t\t\t\t\t\t\t\t\tif (closest[k] === undefined) {\n\t\t\t\t\t\t\t\t\t\t\tclosest[k] = p2;\n\t\t\t\t\t\t\t\t\t\t\tplaced = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor (var l = 0; l < 5; l++) {\n\t\t\t\t\t\t\t\t\tif (!placed) {\n\t\t\t\t\t\t\t\t\t\tif (getDistance(p1, p2) < getDistance(p1, closest[l])) {\n\t\t\t\t\t\t\t\t\t\t\tclosest[l] = p2;\n\t\t\t\t\t\t\t\t\t\t\tplaced = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp1.closest = closest;\n\t\t\t\t\t}\n\n\t\t\t\t\t// assign a circle to each point\n\t\t\t\t\tfor (i = 0; i < points.length; i++) {\n\t\t\t\t\t\tvar c = new Circle(points[i], Math.random() * (pointSizeMax - pointSizeMin) + pointSizeMin, \"rgba(255,255,255,0.3)\");\n\t\t\t\t\t\tpoints[i].circle = c;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Event handling\n\t\t\t\tfunction addListeners() {\n\t\t\t\t\tif (!(\"ontouchstart\" in window)) {\n\t\t\t\t\t\twindow.addEventListener(\"mousemove\", mouseMove);\n\t\t\t\t\t}\n\t\t\t\t\twindow.addEventListener(\"scroll\", scrollCheck);\n\t\t\t\t\twindow.addEventListener(\"resize\", resize);\n\t\t\t\t}\n\n\t\t\t\tfunction mouseMove(e) {\n\t\t\t\t\tvar posx = 0,\n\t\t\t\t\t    posy = 0;\n\t\t\t\t\tif (e.pageX || e.pageY) {\n\t\t\t\t\t\tposx = e.pageX;\n\t\t\t\t\t\tposy = e.pageY;\n\t\t\t\t\t} else if (e.clientX || e.clientY) {\n\t\t\t\t\t\tposx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\t\t\t\tposy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.x = posx;\n\t\t\t\t\ttarget.y = posy;\n\t\t\t\t}\n\n\t\t\t\tfunction scrollCheck() {\n\t\t\t\t\tif (document.body.scrollTop > height) {\n\t\t\t\t\t\tanimateHeader = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tanimateHeader = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction resize() {\n\t\t\t\t\twidth = window.innerWidth;\n\t\t\t\t\theight = window.innerHeight;\n\t\t\t\t\tlargeHeader.style.height = height + \"px\";\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t}\n\n\t\t\t\t// animation\n\t\t\t\tfunction initAnimation() {\n\t\t\t\t\tanimate();\n\t\t\t\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\t\t\t\tshiftPoint(points[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction animate() {\n\t\t\t\t\tif (animateHeader) {\n\t\t\t\t\t\tctx.clearRect(0, 0, width, height);\n\t\t\t\t\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\t\t\t\t\t// detect points in range\n\t\t\t\t\t\t\tif (Math.abs(getDistance(target, points[i])) < 4000) {\n\t\t\t\t\t\t\t\tpoints[i].active = 0.3;\n\t\t\t\t\t\t\t\tpoints[i].circle.active = 0.6;\n\t\t\t\t\t\t\t} else if (Math.abs(getDistance(target, points[i])) < 20000) {\n\t\t\t\t\t\t\t\tpoints[i].active = 0.1;\n\t\t\t\t\t\t\t\tpoints[i].circle.active = 0.3;\n\t\t\t\t\t\t\t} else if (Math.abs(getDistance(target, points[i])) < 40000) {\n\t\t\t\t\t\t\t\tpoints[i].active = 0.02;\n\t\t\t\t\t\t\t\tpoints[i].circle.active = 0.1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpoints[i].active = 0;\n\t\t\t\t\t\t\t\tpoints[i].circle.active = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdrawLines(points[i]);\n\t\t\t\t\t\t\tpoints[i].circle.draw();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trequestAnimationFrame(animate);\n\t\t\t\t}\n\n\t\t\t\tfunction shiftPoint(p) {\n\t\t\t\t\tTweenLite.to(p, 1 + 1 * Math.random(), { x: p.originX - 50 + Math.random() * 100,\n\t\t\t\t\t\ty: p.originY - 50 + Math.random() * 100, ease: Circ.easeInOut,\n\t\t\t\t\t\tonComplete: function () {\n\t\t\t\t\t\t\tshiftPoint(p);\n\t\t\t\t\t\t} });\n\t\t\t\t}\n\n\t\t\t\t// Canvas manipulation\n\t\t\t\tfunction drawLines(p) {\n\t\t\t\t\tif (!p.active) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tfor (var i = 0; i < p.closest.length; i++) {\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo(p.x, p.y);\n\t\t\t\t\t\tctx.lineTo(p.closest[i].x, p.closest[i].y);\n\t\t\t\t\t\tctx.strokeStyle = \"rgba(255,255,255,\" + p.active + \")\";\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction Circle(pos, rad, color) {\n\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\t// constructor\n\t\t\t\t\t(function () {\n\t\t\t\t\t\t_this.pos = pos || null;\n\t\t\t\t\t\t_this.radius = rad || null;\n\t\t\t\t\t\t_this.color = color || null;\n\t\t\t\t\t})();\n\n\t\t\t\t\tthis.draw = function () {\n\t\t\t\t\t\tif (!_this.active) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);\n\t\t\t\t\t\tctx.fillStyle = \"rgba(255,255,255,\" + _this.active + \")\";\n\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Util\n\t\t\t\tfunction getDistance(p1, p2) {\n\t\t\t\t\treturn Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n});","define('giteasy/views/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].View.extend({\n\t\tdidInsertElement: function () {\n\t\t\t//stuffs for header functionality\n\t\t\t$(\".site-head\").prepend(\"<div class='canvasContainer' style='width:0; height:0;'><canvas id='demo-canvas'></canvas</div>\");\n\n\t\t\t$(function () {\n\t\t\t\tvar width,\n\t\t\t\t    height,\n\t\t\t\t    largeHeader,\n\t\t\t\t    canvas,\n\t\t\t\t    ctx,\n\t\t\t\t    points,\n\t\t\t\t    target,\n\t\t\t\t    animateHeader = true,\n\t\t\t\t    numberOfPoints = 10,\n\t\t\t\t    pointSizeMin = 7,\n\t\t\t\t    pointSizeMax = 25;\n\n\t\t\t\t// Main\n\t\t\t\tinitHeader();\n\t\t\t\tinitAnimation();\n\t\t\t\taddListeners();\n\n\t\t\t\tfunction initHeader() {\n\t\t\t\t\twidth = window.innerWidth;\n\t\t\t\t\theight = window.innerHeight;\n\t\t\t\t\ttarget = { x: width / 2, y: height / 2 };\n\n\t\t\t\t\tlargeHeader = document.getElementsByClassName(\"site-head\")[0];\n\n\t\t\t\t\tcanvas = document.getElementById(\"demo-canvas\");\n\t\t\t\t\tcanvas.width = $(\".site-head\").width();\n\t\t\t\t\tcanvas.height = $(\".site-head\").height();\n\t\t\t\t\tctx = canvas.getContext(\"2d\");\n\n\t\t\t\t\t// create points\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tfor (var x = 0; x < width; x = x + width / numberOfPoints) {\n\t\t\t\t\t\tfor (var y = 0; y < height; y = y + height / numberOfPoints) {\n\t\t\t\t\t\t\tvar px = x + Math.random() * width / numberOfPoints;\n\t\t\t\t\t\t\tvar py = y + Math.random() * height / numberOfPoints;\n\t\t\t\t\t\t\tvar p = { x: px, originX: px, y: py, originY: py };\n\t\t\t\t\t\t\tpoints.push(p);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// for each point find the 5 closest points\n\t\t\t\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\t\t\t\tvar closest = [];\n\t\t\t\t\t\tvar p1 = points[i];\n\t\t\t\t\t\tfor (var j = 0; j < points.length; j++) {\n\t\t\t\t\t\t\tvar p2 = points[j];\n\t\t\t\t\t\t\tif (p1 !== p2) {\n\t\t\t\t\t\t\t\tvar placed = false;\n\t\t\t\t\t\t\t\tfor (var k = 0; k < 5; k++) {\n\t\t\t\t\t\t\t\t\tif (!placed) {\n\t\t\t\t\t\t\t\t\t\tif (closest[k] === undefined) {\n\t\t\t\t\t\t\t\t\t\t\tclosest[k] = p2;\n\t\t\t\t\t\t\t\t\t\t\tplaced = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor (var l = 0; l < 5; l++) {\n\t\t\t\t\t\t\t\t\tif (!placed) {\n\t\t\t\t\t\t\t\t\t\tif (getDistance(p1, p2) < getDistance(p1, closest[l])) {\n\t\t\t\t\t\t\t\t\t\t\tclosest[l] = p2;\n\t\t\t\t\t\t\t\t\t\t\tplaced = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp1.closest = closest;\n\t\t\t\t\t}\n\n\t\t\t\t\t// assign a circle to each point\n\t\t\t\t\tfor (i = 0; i < points.length; i++) {\n\t\t\t\t\t\tvar c = new Circle(points[i], Math.random() * (pointSizeMax - pointSizeMin) + pointSizeMin, \"rgba(255,255,255,0.3)\");\n\t\t\t\t\t\tpoints[i].circle = c;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Event handling\n\t\t\t\tfunction addListeners() {\n\t\t\t\t\tif (!(\"ontouchstart\" in window)) {\n\t\t\t\t\t\twindow.addEventListener(\"mousemove\", mouseMove);\n\t\t\t\t\t}\n\t\t\t\t\twindow.addEventListener(\"scroll\", scrollCheck);\n\t\t\t\t\twindow.addEventListener(\"resize\", resize);\n\t\t\t\t}\n\n\t\t\t\tfunction mouseMove(e) {\n\t\t\t\t\tvar posx = 0,\n\t\t\t\t\t    posy = 0;\n\t\t\t\t\tif (e.pageX || e.pageY) {\n\t\t\t\t\t\tposx = e.pageX;\n\t\t\t\t\t\tposy = e.pageY;\n\t\t\t\t\t} else if (e.clientX || e.clientY) {\n\t\t\t\t\t\tposx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\t\t\t\tposy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.x = posx;\n\t\t\t\t\ttarget.y = posy;\n\t\t\t\t}\n\n\t\t\t\tfunction scrollCheck() {\n\t\t\t\t\tif (document.body.scrollTop > height) {\n\t\t\t\t\t\tanimateHeader = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tanimateHeader = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction resize() {\n\t\t\t\t\twidth = window.innerWidth;\n\t\t\t\t\theight = window.innerHeight;\n\t\t\t\t\tlargeHeader.style.height = height + \"px\";\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t}\n\n\t\t\t\t// animation\n\t\t\t\tfunction initAnimation() {\n\t\t\t\t\tanimate();\n\t\t\t\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\t\t\t\tshiftPoint(points[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction animate() {\n\t\t\t\t\tif (animateHeader) {\n\t\t\t\t\t\tctx.clearRect(0, 0, width, height);\n\t\t\t\t\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\t\t\t\t\t// detect points in range\n\t\t\t\t\t\t\tif (Math.abs(getDistance(target, points[i])) < 4000) {\n\t\t\t\t\t\t\t\tpoints[i].active = 0.3;\n\t\t\t\t\t\t\t\tpoints[i].circle.active = 0.6;\n\t\t\t\t\t\t\t} else if (Math.abs(getDistance(target, points[i])) < 20000) {\n\t\t\t\t\t\t\t\tpoints[i].active = 0.1;\n\t\t\t\t\t\t\t\tpoints[i].circle.active = 0.3;\n\t\t\t\t\t\t\t} else if (Math.abs(getDistance(target, points[i])) < 40000) {\n\t\t\t\t\t\t\t\tpoints[i].active = 0.02;\n\t\t\t\t\t\t\t\tpoints[i].circle.active = 0.1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpoints[i].active = 0;\n\t\t\t\t\t\t\t\tpoints[i].circle.active = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdrawLines(points[i]);\n\t\t\t\t\t\t\tpoints[i].circle.draw();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trequestAnimationFrame(animate);\n\t\t\t\t}\n\n\t\t\t\tfunction shiftPoint(p) {\n\t\t\t\t\tTweenLite.to(p, 1 + 1 * Math.random(), { x: p.originX - 50 + Math.random() * 100,\n\t\t\t\t\t\ty: p.originY - 50 + Math.random() * 100, ease: Circ.easeInOut,\n\t\t\t\t\t\tonComplete: function () {\n\t\t\t\t\t\t\tshiftPoint(p);\n\t\t\t\t\t\t} });\n\t\t\t\t}\n\n\t\t\t\t// Canvas manipulation\n\t\t\t\tfunction drawLines(p) {\n\t\t\t\t\tif (!p.active) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tfor (var i = 0; i < p.closest.length; i++) {\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.moveTo(p.x, p.y);\n\t\t\t\t\t\tctx.lineTo(p.closest[i].x, p.closest[i].y);\n\t\t\t\t\t\tctx.strokeStyle = \"rgba(255,255,255,\" + p.active + \")\";\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction Circle(pos, rad, color) {\n\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\t// constructor\n\t\t\t\t\t(function () {\n\t\t\t\t\t\t_this.pos = pos || null;\n\t\t\t\t\t\t_this.radius = rad || null;\n\t\t\t\t\t\t_this.color = color || null;\n\t\t\t\t\t})();\n\n\t\t\t\t\tthis.draw = function () {\n\t\t\t\t\t\tif (!_this.active) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);\n\t\t\t\t\t\tctx.fillStyle = \"rgba(255,255,255,\" + _this.active + \")\";\n\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Util\n\t\t\t\tfunction getDistance(p1, p2) {\n\t\t\t\t\treturn Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n});","define('giteasy/views/repo-dir/edit-file', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        didInsertElement: function () {\n            var editor = ace.edit(\"editor\");\n            editor.setTheme(\"ace/theme/monokai\");\n            editor.getSession().setMode(\"ace/mode/javascript\");\n        }\n    });\n\n});","/* jshint ignore:start */\n\ndefine('giteasy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'giteasy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"giteasy/tests/test-helper\");\n} else {\n  require(\"giteasy/app\")[\"default\"].create({\"name\":\"giteasy\",\"version\":\"0.0.0.f94bf6f3\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACljXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrrnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbbllNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"giteasy.js"}